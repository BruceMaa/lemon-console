--- ### 应用配置
application:
  id: lemon-console
  # 名称
  name: Lemon Console
  # 描述
  description: 柠檬控制台
  # 版本
  version: 1.0.0
  starter: 2.13.4
  # 基本包
  base-package: cn.onesorigin.lemon.console
  ## 作者信息配置
  contact:
    name: maqiang
    email: maqiang@onesorigin.cn
    url: https://onesorigin.cn
  ## 许可协议信息配置
  license:
    name: Apache-2.0
    url: https://github.com/brucemaa/lemon-console/blob/main/LICENSE

--- ### 服务器配置
server:
  servlet:
    # 应用访问路径
    context-path: /
  ## Undertow 服务器配置
  undertow:
    # HTTP POST 请求内容的大小上限（默认 -1，不限制）
    max-http-post-size: -1
    # 以下的配置会影响 buffer，这些 buffer 会用于服务器连接的 IO 操作，有点类似 Netty 的池化内存管理
    # 每块 buffer的空间大小（越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可）
    buffer-size: 512
    # 是否分配的直接内存（NIO 直接分配的堆外内存）
    direct-buffers: true
    threads:
      # 设置 IO 线程数，它主要执行非阻塞的任务，它们会负责多个连接（默认每个 CPU 核心一个线程）
      io: 8
      # 阻塞任务线程池，当执行类似 Servlet 请求阻塞操作，Undertow 会从这个线程池中取得线程（它的值设置取决于系统的负载）
      worker: 256

--- ### Spring 项目配置
spring:
  application:
    name: ${application.id}
  ## 环境配置
  profiles:
    # 启用的环境
    active: dev
    include:
      - generator
  main:
    # 允许定义重名的 bean 对象覆盖原有的 bean
    allow-bean-definition-overriding: true
    # 允许循环依赖
    allow-circular-references: true
  ## Jackson 配置
  jackson:
    # 大数值序列化模式
    # FLEXIBLE：超过 JS 范围的数值转为 String 类型，否则保持原类型
    big-number-serialize-mode: FLEXIBLE

--- ## 线程池配置（默认启用扩展配置，如未指定 corePoolSize、maxPoolSize 则根据机器配置自动设置）
spring.task:
  # 异步任务
  execution:
    thread-name-prefix: task-pool
    # 任务拒绝策略（默认 ABORT，不执行新任务，直接抛出 RejectedExecutionException 异常）
    # CALLER_RUNS：提交的任务在执行被拒绝时，会由提交任务的线程去执行
    rejected-policy: CALLER_RUNS
    pool:
      keep-alive: 300s
    shutdown:
      # 是否等待任务执行完成再关闭线程池（默认 false）
      await-termination: true
      # 等待时间
      await-termination-period: 30s
  # 定时任务
  scheduling:
    thread-name-prefix: schedule-pool
    # 任务拒绝策略（默认 ABORT，不执行新任务，直接抛出 RejectedExecutionException 异常）
    # CALLER_RUNS：提交的任务在执行被拒绝时，会由提交任务的线程去执行
    rejected-policy: CALLER_RUNS
    shutdown:
      # 是否等待任务执行完成再关闭线程池（默认 false）
      await-termination: true
      # 等待时间
      await-termination-period: 30s

--- ### 文件上传配置
spring.servlet.multipart:
  enabled: true
  # 单文件上传大小限制
  max-file-size: 10MB
  # 单次总上传文件大小限制
  max-request-size: 20MB

--- ### 接口文档配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui
  # 设置对象型参数的展示形式（设为 true 表示将对象型参数平展开，即对象内的属性直接作为参数展示而不是嵌套在对象内，默认 false）
  # 如果不添加该全局配置，可以在需要如此处理的对象参数类上使用 @ParameterObject
  default-flat-param-object: true
  ## 组件配置
  components:
    # 鉴权配置
    security-schemes:
      Authorization:
        type: HTTP
        in: HEADER
        name: ${sa-token.token-name}
        scheme: ${sa-token.token-prefix}
## 接口文档增强配置
knife4j:
  enable: true
  setting:
    # 是否显示默认的 footer（默认 true，显示）
    enable-footer: false
    # 是否自定义 footer（默认 false，非自定义）
    enable-footer-custom: true
    # 自定义 footer 内容，支持 Markdown 语法
    footer-custom-content: 'Copyright © 2025-present [${application.contact.name}](${application.contact.url})&nbsp;⋅&nbsp;[${application.name}](${application.url}) v${application.version}'

--- ### 全局响应配置
continew-starter.web.response:
  # 是否开启国际化（默认：false）
  i18n: false
  # 自定义失败 HTTP 状态码（默认：200，建议业务和通信状态码区分）
  default-http-status-code-on-error: 200
  # 自定义成功响应码（默认：0）
  default-success-code: 0
  # 自定义成功提示（默认：ok）
  default-success-msg: ok
  # 自定义失败响应码（默认：1）
  default-error-code: 1
  # 自定义失败提示（默认：error）
  default-error-msg: error
  # 是否将原生异常错误信息填充到状态信息中
  origin-exception-using-detail-message: false
  # 响应类全名（配置后 response-style 将不再生效）
  response-class-full-name: top.continew.starter.web.model.R

## 项目日志配置
logging:
  config: classpath:logback-spring.xml

--- ### CRUD 配置
continew-starter.crud:
  ## 全局树结构配置（简单树，对应前端 UI）
  tree:
    id-key: key
    name-key: title
    weight-key: sort

--- ### MyBatis Plus 配置
mybatis-plus:
  # Mapper XML 文件目录配置
  mapper-locations: classpath*:/mapper/**/*Mapper.xml
  # 类型别名扫描包配置
  type-aliases-package: ${application.base-package}.**.model
  ## MyBatis 配置
  configuration:
    # MyBatis 自动映射策略
    # NONE：不启用 PARTIAL：只对非嵌套 resultMap 自动映射 FULL：对所有 resultMap 自动映射
    auto-mapping-behavior: PARTIAL
    database-id: pgsql
  ## 全局配置
  global-config:
    banner: true
    db-config:
      # 主键类型（默认 assign_id，表示自行赋值）
      # auto 代表使用数据库自增策略（需要在表中设置好自增约束）
      id-type: ASSIGN_ID
  ## 扩展配置
  extension:
    enabled: true
    # Mapper 接口扫描包配置
    mapper-package: ${application.base-package}.**.mapper
    # ID 生成器配置
    id-generator:
      type: COSID
    # 分页插件配置
    pagination:
      enabled: true
      db-type: POSTGRE_SQL

# 验证码配置
captcha:
  # 验证码类型 CIRCLE-圆圈干扰验证码|GIF-Gif验证码|LINE-干扰线验证码|SHEAR-扭曲干扰验证码
  type: CIRCLE
  # 验证码宽度
  width: 120
  # 验证码高度
  height: 40
  # 验证码干扰元素个数
  interfere-count: 2
  # 文本透明度(0.0-1.0)
  text-alpha: 0.8
  # 验证码字符配置
  code:
    # 验证码字符类型 math-算术|random-随机字符
    type: math
    # 验证码字符长度，type=算术时，表示运算位数(1:个位数运算 2:十位数运算)；type=随机字符时，表示字符个数
    length: 1
  # 验证码字体
  font:
    # 字体名称 Dialog|DialogInput|Monospaced|Serif|SansSerif
    name: SansSerif
    # 字体样式 0-普通|1-粗体|2-斜体
    style: 1
    # 字体大小
    size: 24
  # 验证码有效期(秒)
  expire-seconds: 120
